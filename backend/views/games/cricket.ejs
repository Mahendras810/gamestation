<%- include('../partials/header', { title: 'Cricket Game' }) %>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
<style>
  html,
  body {
    margin: 0;
    padding: 0;
    height: 100vh;
    overflow: hidden;
    font-family: 'Segoe UI', sans-serif;
    background-color: #0d0d0d;
    color: white;
  }

  .top-header {
    background-color: #1a1a1a;
    padding: 10px 15px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #333;
    position: relative;
    z-index: 100;
  }

  .logo {
    font-size: 20px;
    font-weight: 700;
    color: white;
    letter-spacing: 1px;
  }

  .header-actions {
    display: flex;
    align-items: center;
    gap: 15px;
  }

  .how-to-play {
    background-color: orange;
    color: black;
    font-weight: bold;
    border: none;
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 14px;
    cursor: pointer;
  }

  .wallet {
    color: #4caf50;
    font-weight: bold;
    font-size: 15px;
  }

  .menu-toggle {
    background-color: #2a2a2a;
    padding: 6px 10px;
    border-radius: 4px;
    cursor: pointer;
    color: white;
  }

  .menu-toggle:hover {
    background-color: #444;
  }

  .dropdown-menu {
    position: absolute;
    top: 50px;
    right: 10px;
    background-color: #1e1e1e;
    border: 1px solid #333;
    display: none;
    flex-direction: column;
    z-index: 999;
    min-width: 200px;
    border-radius: 6px;
  }

  .dropdown-menu a {
    display: block;
    padding: 10px 12px;
    color: #ccc;
    text-decoration: none;
  }

  .dropdown-menu a:hover {
    background-color: #333;
    color: white;
  }

  .game-wrapper {
    display: flex;
    flex-wrap: wrap;
    height: calc(100vh - 60px);
    overflow: hidden;
  }

  .left-box {
    width: 100%;
    max-width: 30%;
    background-color: #181818;
    border-right: 1px solid #333;
    padding: 10px;
    box-sizing: border-box;
    overflow-y: auto;
  }

  .tabs {
    display: flex;
    gap: 10px;
    margin-bottom: 10px;
  }

  .tab-button {
    flex: 1;
    padding: 6px;
    background-color: #222;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  .tab-button.active {
    background-color: #00cc00;
    font-weight: bold;
  }

  .tab-content {
    display: none;
  }

  .tab-content.active {
    display: block;
  }

  .total-bets {
    font-weight: bold;
    color: #0f0;
    margin-bottom: 10px;
  }

  .bet-entry {
    background-color: #222;
    margin: 6px 0;
    padding: 6px;
    border-radius: 5px;
    font-size: 14px;
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .bet-entry img {
    width: 24px;
    height: 24px;
    border-radius: 50%;
  }

  .right-box {
    flex: 1;
    background-color: #121212;
    padding: 15px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    gap: 15px;
    position: relative;
    overflow: hidden;
  }

  .multiplier-bar {
    display: flex;
    flex-wrap: wrap;
    gap: 6px;
    align-items: center;
  }

  .multiplier {
    background-color: #222;
    padding: 4px 8px;
    border-radius: 4px;
    font-weight: bold;
    font-size: 13px;
  }

  .col-1 {
    background-color: #1e88e5;
  }

  .col-2 {
    background-color: #43a047;
  }

  .col-3 {
    background-color: #e53935;
  }

  .round-toggle-container {
    position: relative;
    display: inline-block;
  }

  .round-toggle {
    font-size: 14px;
    cursor: pointer;
    color: #ccc;
  }

  .round-info-box {
    display: none;
    background-color: #222;
    padding: 10px;
    border-radius: 6px;
    color: #eee;
    position: absolute;
    top: 25px;
    left: 0;
    width: 300px;
    z-index: 999;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  }

  .cricket-animation {
    height: 500px;
    max-width: 100%;
    overflow: hidden;
    border-radius: 8px;
    background: black;
    position: relative;
  }

  #game-container {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #game-container canvas {
    width: 100% !important;
    height: 100% !important;
    display: block;
  }

  #loading {
    color: white;
    text-align: center;
    padding-top: 200px;
  }

  .bet-section {
    display: flex;
    justify-content: space-around;
    gap: 10px;
    background: #1e1e1e;
    padding: 10px 0;
    border-radius: 6px;
  }

  .bet-box {
    text-align: center;
  }

  .bet-box input {
    width: 70px;
    text-align: center;
    font-size: 16px;
    margin: 5px 0;
    border-radius: 4px;
    padding: 4px;
  }

  .btn-bet {
    background-color: #00cc00;
    color: white;
    border: none;
    padding: 8px 16px;
    font-size: 16px;
    border-radius: 6px;
    cursor: pointer;
  }

  @media (max-width: 768px) {

    .left-box,
    .right-box {
      max-width: 100%;
    }

    .game-wrapper {
      flex-direction: column;
    }

    .header-actions {
      flex-direction: column;
      align-items: flex-end;
      gap: 5px;
    }

    .dropdown-menu {
      right: 10px;
      top: 55px;
    }
  }
</style>
<!-- HEADER -->
<div class="top-header">
  <div class="logo">CRICKET</div>
  <div class="header-actions">
    <button class="how-to-play"><i class="fas fa-question-circle"></i> How to play? </button>
    <div class="wallet" id="walletDisplay">
      <% if (user && user.walletBalance !== undefined) { %>
        ‚Çπ<%= user.walletBalance.toFixed(2) %> INR
      <% } else { %>
        <a href="/login" style="color:#fff; text-decoration:underline;">üîí Login</a>
      <% } %>
    </div>
    <div class="menu-toggle" onclick="toggleMenu()">
      <i class="fas fa-bars"></i>
    </div>
  </div>
</div>
<!-- Dropdown Menu -->
<div class="dropdown-menu" id="menuBox">
  <a href="#" onclick="toggleSound()">üîä Sound: <span id="soundStatus">On</span>
  </a>
  <a href="#" onclick="toggleMusic()">üéµ Music: <span id="musicStatus">On</span>
  </a>
  <a href="/wallet">üìú My Bet History</a>
  <a href="#" onclick="toggleLimits()">üìã Game Limits</a>
  <a href="#">üåê Language: English</a>
</div>
<!-- MAIN GAME AREA -->
<div class="game-wrapper">
  <div class="left-box">
    <div class="tabs">
      <button class="tab-button active" onclick="switchTab('all')">All Bets</button>
      <button class="tab-button" onclick="switchTab('my')">My Bets</button>
      <button class="tab-button" onclick="switchTab('top')">Top</button>
    </div>
    <div id="tab-all" class="tab-content active">
      <div class="total-bets">All Bets: ‚Çπ230769</div><% for (let i = 1; i <= 6; i++) { %> <div class="bet-entry">
        <img src="/images/user.png" alt="avatar" />
        <div>
          <strong>a***<%= i %> </strong> ‚Äî ‚Çπ<%= i * 100 %> | Out at <%= (1.5 + i/10).toFixed(2) %>x
        </div>
      </div><% } %>
    </div>
    <div id="tab-my" class="tab-content">
      <div class="total-bets">My Bets:</div>
      <div class="bet-entry">
        <img src="/images/user.png" alt="avatar" />
        <div>
          <strong><%= user.username %> </strong> ‚Äî ‚Çπ150 | Out at 2.00x
        </div>
      </div>
    </div>
    <div id="tab-top" class="tab-content">
      <div class="total-bets">Top Players:</div>
      <div class="bet-entry">
        <img src="/images/user.png" alt="avatar" />
        <div>
          <strong>P***r1</strong> ‚Äî ‚Çπ8000 | Win 4.50x
        </div>
      </div>
    </div>
  </div>
  <!-- ‚úÖ RIGHT BOX -->
  <div class="right-box">
    <div class="multiplier-bar"><% last50Rounds.slice(0, 15).forEach(r => { %> <div class="multiplier col-<%= r.size %>"><%= r.multiplier %>x </div><% }) %> </div>
    <div class="round-toggle-container">
      <div class="round-toggle" onclick="toggleRoundInfo()">Round ID: <%= currentRound.id %> ‚¨áÔ∏è </div>
      <div class="round-info-box" id="round-info-box">
        <div>
          <strong>Original Seed:</strong><%= currentRound.seed || 'N/A' %>
        </div>
        <div>
          <strong>Result:</strong><%= currentRound.result || 'Pending' %>
        </div>
        <div>
          <strong>Result Cipher:</strong><%= currentRound.cipher %>
        </div>
        <button onclick="copyCipher()">üìã Copy</button>
      </div>
    </div>
    <div class="cricket-animation" id="game-container">
      <div id="loading">Loading game assets...</div>
    </div>
    <div class="bet-section">
      <div class="bet-box">
        <div>BET 1</div>
        <input type="number" id="bet-amount-1" value="10" min="10" max="8000" />
        <button class="btn-bet" onclick="placeBet(1)">BET ‚Çπ10</button>
      </div>
      <div class="bet-box">
        <div>BET 2</div>
        <input type="number" id="bet-amount-2" value="10" min="10" max="8000" />
        <button class="btn-bet" onclick="placeBet(2)">BET ‚Çπ10</button>
      </div>
    </div>
  </div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
  // Make socket globally available
  window.socket = io();
  // Wait for DOM to be fully loaded
  document.addEventListener('DOMContentLoaded', () => {
    // Function to start game
    function initializeGame() {
      const gameContainer = document.getElementById('game-container');
      if (!gameContainer) {
        console.error('Game container not found');
        return;
      }
      const canvas = document.createElement('canvas');
      canvas.id = 'phaser-canvas';
      canvas.style.display = 'block';
      canvas.style.margin = '0 auto';
      gameContainer.appendChild(canvas);
      const config = {
        type: Phaser.WEBGL,
        width: gameContainer.clientWidth,
        height: gameContainer.clientHeight,
        canvas: canvas,
        physics: {
          default: 'arcade',
          arcade: {
            gravity: {
              y: 0
            },
            debug: false
          }
        },
        scene: [window.GameScene],
        render: {
          antialias: true,
          pixelArt: false
        }
      };
      try {
        const game = new Phaser.Game(config);
        window.phaserGame = game;
        document.getElementById('loading')?.remove(); // ‚úÖ Remove loading message
      } catch (error) {
        console.error('Phaser initialization failed:', error);
        document.getElementById('loading').textContent = 'Game failed to initialize';
      }
    }
    // Load Phaser
    const phaserScript = document.createElement('script');
    phaserScript.src = 'https://cdn.jsdelivr.net/npm/phaser@3.55.2/dist/phaser.min.js';
    phaserScript.onload = () => {
      const gameScript = document.createElement('script');
      gameScript.src = '/js/phaser/game.js';
      gameScript.onload = () => {
        setTimeout(initializeGame, 100);
      };
      gameScript.onerror = () => {
        console.error('Failed to load game script');
        document.getElementById('loading').textContent = 'Failed to load game';
      };
      document.body.appendChild(gameScript);
    };
    phaserScript.onerror = () => {
      console.error('Failed to load Phaser');
      document.getElementById('loading').textContent = 'Failed to load game engine';
    };
    document.body.appendChild(phaserScript);
  });
  // UI Functions (keep these outside DOMContentLoaded)
  function toggleMenu() {
    const menu = document.getElementById('menuBox');
    menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
  }

  function toggleRoundInfo() {
    const box = document.getElementById('round-info-box');
    box.style.display = box.style.display === 'block' ? 'none' : 'block';
  }

  function copyCipher() {
    const cipher = "<%= currentRound.cipher %>";
    navigator.clipboard.writeText(cipher);
    alert("Cipher copied!");
  }

  function switchTab(tab) {
    document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
    document.querySelectorAll('.tab-content').forEach(tabContent => tabContent.classList.remove('active'));
    document.querySelector(`[onclick="switchTab('${tab}')"]`).classList.add('active');
    document.getElementById(`tab-${tab}`).classList.add('active');
  }
  // Sound Controls
  let isSoundOn = true;
  let isMusicOn = true;

  function toggleSound() {
    isSoundOn = !isSoundOn;
    document.getElementById('soundStatus').textContent = isSoundOn ? 'On' : 'Off';
    if (window.phaserGame) {
      window.phaserGame.sound.mute = !isSoundOn;
    }
  }

  function toggleMusic() {
    isMusicOn = !isMusicOn;
    document.getElementById('musicStatus').textContent = isMusicOn ? 'On' : 'Off';
  }

  function toggleLimits() {
    const modal = document.getElementById('limitsModal');
    if (modal) {
      modal.style.display = modal.style.display === 'none' ? 'block' : 'none';
    }
  }
  // Betting Functions
  function placeBet(boxNumber) {
    const amount = parseFloat(document.getElementById(`bet-amount-${boxNumber}`).value);
    if (amount < 10 || amount > 8000) {
      alert('Bet amount must be between ‚Çπ10 and ‚Çπ8000');
      return;
    }
    window.socket.emit('placeBet', {
      amount: amount,
      userId: '<%= user.id %>',
      box: boxNumber
    });
  }
  // Socket Events
  window.socket.on('betResult', (data) => {
    if (data.success) {
      alert(`Bet placed successfully! ‚Çπ${data.amount}`);
    } else {
      alert(`Bet failed: ${data.message}`);
    }
  });
  window.socket.on('roundStart', (data) => {
    console.log('New round started:', data.roundId);
  });
  window.socket.on('gameResult', (data) => {
    alert(`Round complete! Multiplier: ${data.multiplier}x`);
  });
</script>